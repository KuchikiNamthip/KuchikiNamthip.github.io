<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://kuchikinamthip.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://kuchikinamthip.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-16T06:23:10+00:00</updated><id>https://kuchikinamthip.github.io/feed.xml</id><title type="html">The Whispers of Biology</title><subtitle>Cool Website &amp; Blog written by NAMTHIP. </subtitle><entry><title type="html">Happy Teachers’ Day 2025</title><link href="https://kuchikinamthip.github.io/blog/2025/10yr_teacherDay/" rel="alternate" type="text/html" title="Happy Teachers’ Day 2025"/><published>2025-01-15T00:00:00+00:00</published><updated>2025-01-15T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2025/10yr_teacherDay</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2025/10yr_teacherDay/"><![CDATA[<p>Thailand, where I was raised, <br/> is a country deeply rooted in a culture of <br/> unwavering respect for teachers.</p> <p>We forever honor those who guided our path.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/post2025/2025TeacherDay-480.webp 480w,/assets/img/post2025/2025TeacherDay-800.webp 800w,/assets/img/post2025/2025TeacherDay-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/post2025/2025TeacherDay.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>In Thai, January 16th of every year is Teachers’ Day.</p> <p>For ten years, I’ve sent Happy Teacher’s Day cards to my teachers. It began as a simple annual greeting.</p> <p>Now, even though I’ve grown up, become a pharmacist, and (nearly) earned a Ph.D., I remain their student and will always respect them from the bottom of my heart.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <iframe src="https://www.youtube.com/embed/85g5n17baI0?si=OyOVa_gIeH5zjGY5" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" width="auto" height="auto"/> </figure> </div> </div> <p>May the words ‘Happy Teacher’s Day’ <br/> be etched in our hearts for all teachers.</p> <p>May the light of wisdom you have given us <br/> illuminate and guide your students forever, from now, ten years and for eternity.</p>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><summary type="html"><![CDATA[Thailand, where I was raised, is a country deeply rooted in a culture of unwavering respect for teachers.]]></summary></entry><entry><title type="html">Namthip - Ph.D. Thesis Defense Announcement 🤓</title><link href="https://kuchikinamthip.github.io/blog/2025/KK_PhD-defense/" rel="alternate" type="text/html" title="Namthip - Ph.D. Thesis Defense Announcement 🤓"/><published>2025-01-10T00:00:00+00:00</published><updated>2025-01-10T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2025/KK_PhD-defense</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2025/KK_PhD-defense/"><![CDATA[<p>Check out the poster I made for my Ph.D. defense! I went with an Iron Man theme.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/post2025/KK-defense_FBpost-480.webp 480w,/assets/img/post2025/KK-defense_FBpost-800.webp 800w,/assets/img/post2025/KK-defense_FBpost-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/post2025/KK-defense_FBpost.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>This video is my way of expressing deep gratitude to everyone who has been part of my cancer research journey, from my early days as a high school student to this significant milestone - completing my PhD. Your support, encouragement, and guidance over the years have made this achievement possible. This journey in cancer research began when I was still in high school, and thanks to countless mentors, colleagues, friends, and supporters, I’ve reached this important milestone. Thank you for being part of this meaningful journey.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <iframe src="https://www.youtube.com/embed/OhNmSrR42AE?si=A2-MVObSHWNA7fi6" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" width="auto" height="auto"/> </figure> </div> </div>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><summary type="html"><![CDATA[Check out the poster I made for my Ph.D. defense! I went with an Iron Man theme.]]></summary></entry><entry><title type="html">Namthip - The Best Poster Presentation 2021 🎉</title><link href="https://kuchikinamthip.github.io/blog/2025/KK_2021BestPoster/" rel="alternate" type="text/html" title="Namthip - The Best Poster Presentation 2021 🎉"/><published>2025-01-06T00:00:00+00:00</published><updated>2025-01-06T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2025/KK_2021BestPoster</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2025/KK_2021BestPoster/"><![CDATA[<div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/post2025/KK-poster-award-480.webp 480w,/assets/img/post2025/KK-poster-award-800.webp 800w,/assets/img/post2025/KK-poster-award-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/post2025/KK-poster-award.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Moo Deng - Hippo pathway x Cancer - [NO CANCER]</title><link href="https://kuchikinamthip.github.io/blog/2024/NOCANCER-Hippo/" rel="alternate" type="text/html" title="Moo Deng - Hippo pathway x Cancer - [NO CANCER]"/><published>2024-09-27T00:00:00+00:00</published><updated>2024-09-27T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2024/NOCANCER-Hippo</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2024/NOCANCER-Hippo/"><![CDATA[<h2 id="what-is-hippo-pathway">What is Hippo Pathway</h2> <p>The Hippo signaling pathway is an evolutionarily conserved network that plays a critical role in regulating various biological processes, including</p> <ol> <li>Regulation of Cell Growth and Proliferation - The Hippo pathway inhibits excessive cell growth and division by phosphorylating and inactivating YAP and TAZ</li> <li>Control of Organ Size - It ensures that organs grow to their appropriate size by balancing cell growth with cell death.</li> <li>Tissue Regeneration and Wound Healing</li> </ol> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/post2024/Moodeng_ENG-480.webp 480w,/assets/img/post2024/Moodeng_ENG-800.webp 800w,/assets/img/post2024/Moodeng_ENG-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/post2024/Moodeng_ENG.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Moo Deng (Hippo pathway) controls human health and diseases, Photo by <a href="https://www.facebook.com/nocancerTH/" target="_blank">No Cancer THAILAND</a> </div> <h2 id="dysregulation-and-disease-implications">Dysregulation and Disease Implications</h2> <p>Dysregulation of the Hippo pathway can lead to various diseases <br/> 😱 Cancer <br/> 💔 Cardiac Diseases <br/> 🫁 Pulmonary Diseases <br/> 🧪 Renal Diseases <br/> 🍸 Hepatic Diseases <br/> 👁️ Eye Diseases <br/> 🛡️ Immune Dysfunction</p> <h2 id="key-roles-of-the-hippo-pathway-in-cancer">Key Roles of the Hippo Pathway in Cancer</h2> <ol> <li>Tumor Suppression - The Hippo pathway acts as a critical tumor suppressor by inhibiting excessive cell proliferation and promoting apoptosis. Dysregulation of this pathway can lead to the uncontrolled growth characteristic of cancer.</li> <li>Oncogenic Activation - In many cancers, the Hippo pathway is found to be inactivated, resulting in the overactivation of YAP/TAZ. This promotes oncogenesis by driving the expression of genes that facilitate cell growth and survival, contributing to tumor progression</li> <li>Cancer Stem Cell Biology</li> </ol> <p>🔬💊 Given its significant role in health and disease, targeting the components of the Hippo pathway has emerged as a potential therapeutic strategy for treating various conditions, particularly cancers</p> <p>🌟 Reference: <br/> Fu, M., Hu, Y., Lan, T. et al. The Hippo signalling pathway and its implications in human health and diseases. Sig Transduct Target Ther 7, 376 (2022). https://doi.org/10.1038/s41392-022-01191-9</p>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><category term="NoCancer"/><category term="NoCancer"/><category term="NoCancerTH"/><summary type="html"><![CDATA[What is Hippo Pathway The Hippo signaling pathway is an evolutionarily conserved network that plays a critical role in regulating various biological processes, including Regulation of Cell Growth and Proliferation - The Hippo pathway inhibits excessive cell growth and division by phosphorylating and inactivating YAP and TAZ Control of Organ Size - It ensures that organs grow to their appropriate size by balancing cell growth with cell death. Tissue Regeneration and Wound Healing]]></summary></entry><entry><title type="html">Operating System using Linux - [Proj:My Computer Workbench]</title><link href="https://kuchikinamthip.github.io/blog/2024/Comp1_OS/" rel="alternate" type="text/html" title="Operating System using Linux - [Proj:My Computer Workbench]"/><published>2024-09-26T00:00:00+00:00</published><updated>2024-09-26T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2024/Comp1_OS</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2024/Comp1_OS/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>For this part of <a href="https://kuchikinamthip.github.io/projects/ComBio">My Computer Workbench</a>, I would like to explain about the operating system(OS) that I am using.</p> <h2 id="operating-system">Operating system</h2> <p>Since Linux is widely used for High Performance Computing (HPC) for analyzing upstream -omics. Ubuntu is the most famous Linux distribution in the computational biology field.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/ubuntu-480.webp 480w,/assets/img/ComSetting/ubuntu-800.webp 800w,/assets/img/ComSetting/ubuntu-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/ubuntu.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Linux operating system </div> <p>Therefore, I used Linux as my operating system and Ubuntu as my distribution. This helped a lot in practicing Unix command line. I started by installing Linux myself with the kind help of my friends (software engineers(Guy &amp; Bui)) and my teacher (she was working on molecular docking). I also took a Linux Foundation course to understand basic command line and other topics. Here is my computer, which I use for simple work with a 32 GB of RAM.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/MyCom-480.webp 480w,/assets/img/ComSetting/MyCom-800.webp 800w,/assets/img/ComSetting/MyCom-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/MyCom.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> My computer </div> <p>The Linux system seems to be working well; however, program installation is complex when it comes to debugging.</p>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><category term="ComputerWorkbench"/><category term="Unix"/><category term="Linux"/><category term="OS"/><summary type="html"><![CDATA[Introduction]]></summary></entry><entry><title type="html">Containerization using Docker - [Proj:My Computer Workbench]</title><link href="https://kuchikinamthip.github.io/blog/2024/Comp2_Docker/" rel="alternate" type="text/html" title="Containerization using Docker - [Proj:My Computer Workbench]"/><published>2024-09-26T00:00:00+00:00</published><updated>2024-09-26T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2024/Comp2_Docker</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2024/Comp2_Docker/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>For this part of <a href="https://kuchikinamthip.github.io/projects/ComBio">My Computer Workbench</a>, I would like to explain the concept of containers and their benefits in computational biology.</p> <h2 id="containerize-docker">Containerize (Docker)</h2> <p>To solve the Linux problem and address the issue of reproducibility, I use <a href="https://www.docker.com/resources/what-container/">container</a> called <a href="https://www.docker.com/">“Docker”</a>.</p> <p>The concept of containerization is to include all the necessary components, such as the operating system, programs, and dependencies, within the container. This ensures that the container is always ready to use without any installation issues.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/docker-480.webp 480w,/assets/img/ComSetting/docker-800.webp 800w,/assets/img/ComSetting/docker-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/docker.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Concept of Docker container </div>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><category term="ComputerWorkbench"/><category term="Unix"/><category term="Linux"/><category term="Docker"/><category term="Container"/><summary type="html"><![CDATA[Introduction For this part of My Computer Workbench, I would like to explain the concept of containers and their benefits in computational biology.]]></summary></entry><entry><title type="html">Reproducible Computational Biology Workflow by nf-core - [Proj:My Computer Workbench]</title><link href="https://kuchikinamthip.github.io/blog/2024/Comp3_nf/" rel="alternate" type="text/html" title="Reproducible Computational Biology Workflow by nf-core - [Proj:My Computer Workbench]"/><published>2024-09-26T00:00:00+00:00</published><updated>2024-09-26T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2024/Comp3_nf</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2024/Comp3_nf/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>For this part of <a href="https://kuchikinamthip.github.io/projects/ComBio">My Computer Workbench</a>, I would like to introduce about nf-core and their benefits in computational biology.</p> <h2 id="nf-core">nf-core</h2> <p>I have also used conda, but setting dependencies can be quite complex, especially on HPC where you are not the administrator. Most of the time, I had to install programs and create the reference genome index I needed by myself.</p> <p>Bugs started occurring since then. For these reasons, I decided to use a docker container for heavy analysis, such as the genome alignment. One of the convenient ways to do this is by using nf-core.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/nfcore-480.webp 480w,/assets/img/ComSetting/nfcore-800.webp 800w,/assets/img/ComSetting/nfcore-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/nfcore.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> nf-core logo </div> <p>The <a href="https://nf-co.re/">nf-core</a> provides analysis pipelines for bioinformatics. It is a workflow run by <a href="https://www.nextflow.io/">Nextflow</a> and includes the necessary programs. For example, <a href="https://nf-co.re/rnaseq/3.12.0/">RNA-seq analysis</a>, where I can select which program I will use for each process. Currently, I am running the upstream process with nf-core on an HPC.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/nf_rna-480.webp 480w,/assets/img/ComSetting/nf_rna-800.webp 800w,/assets/img/ComSetting/nf_rna-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/nf_rna.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> nf-core: RNA sequencing analysis </div> <p>To use nf-core pipelines, I installed it as recommended in the <a href="https://nf-co.re/docs/usage/getting_started/introduction/">Getting started</a>. Roughly, there are 3 main steps I did on the HPC, including nextflow installation, docker installation (you can choose others such as conda), and aliasing nf-core.</p> <p>For the alias step, I used the following command. This tells the HPC that whenever I type <code class="language-plaintext highlighter-rouge">nf-core</code> means “docker run -itv <code class="language-plaintext highlighter-rouge">pwd</code>:<code class="language-plaintext highlighter-rouge">pwd</code> -w pwd nfcore/tools”. Please note that there is a difference between <code class="language-plaintext highlighter-rouge">nfcore</code> and <code class="language-plaintext highlighter-rouge">nf-core</code> in the command.</p> <pre><code class="language-{bash}">alias nf-core="docker run -itv `pwd`:`pwd` -w `pwd` nfcore/tools"
</code></pre> <p>To test if the <code class="language-plaintext highlighter-rouge">alias</code> works, use the following command. This command will list all nf-core pipelines.</p> <pre><code class="language-{bash}">nf-core list
</code></pre>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><category term="ComputerWorkbench"/><category term="Unix"/><category term="Linux"/><category term="Docker"/><category term="Container"/><category term="nf-core"/><category term="Nextflow"/><summary type="html"><![CDATA[Introduction For this part of My Computer Workbench, I would like to introduce about nf-core and their benefits in computational biology.]]></summary></entry><entry><title type="html">Popular Computational Biology Language with R - [Proj:My Computer Workbench]</title><link href="https://kuchikinamthip.github.io/blog/2024/Comp4_R/" rel="alternate" type="text/html" title="Popular Computational Biology Language with R - [Proj:My Computer Workbench]"/><published>2024-09-26T00:00:00+00:00</published><updated>2024-09-26T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2024/Comp4_R</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2024/Comp4_R/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>For this part of <a href="https://kuchikinamthip.github.io/projects/ComBio">My Computer Workbench</a>, I would like to explain the programming language I am using. Additionally, this section covers trick for R and how to use R with reproducibility in mind.</p> <h2 id="r-and-r-studio">R and R studio</h2> <p>I mostly use <a href="http://mercury.webster.edu/aleshunas/R_learning_infrastructure/Introduction_to_R_and_RStudio.html">R and Rstudio</a> mostly for my downstream analysis and visualization. However, I have encountered program dependency problems when running R on Linux. As a solution, I have started using dockerized RStudio to create an RStudio server.</p> <p>Here is the code for running dockerized RStudio. Step 1 Create directory for the Dockerized R studio</p> <pre><code class="language-{bash}">cd /home/namthip
mkdir R
cd R
mkdir host-site-library
</code></pre> <p>Step 2 Give writable permission on <code class="language-plaintext highlighter-rouge">host-site-library</code>, to install custom R packages</p> <pre><code class="language-{bash}">chmod a+w -R /home/namthip/R/host-site-library
</code></pre> <p>Step 3 To initialize the Dockerized R Studio and open RStudio Server</p> <pre><code class="language-{bash}"> sudo docker run \
    -v /home/namthip:/home/rstudio/namthip \
    -v /home/namthip/R/host-site-library:/usr/local/lib/R/host-site-library \
    -e R_LIBS_USER=/home/namthip/R/host-site-library \
    -e PASSWORD=&lt;MY_PASSWORD&gt; \
  	-p 8787:8787 \
  	bioconductor/bioconductor_docker:RELEASE_3_15
</code></pre> <p>I pull a Docker image from <a href="https://hub.docker.com/r/bioconductor/bioconductor_docker">bioconductor</a> (as suggested by Tommy in his blog post). I think this Docker image is great. They explain clearly how to mount a volume (directory). I had tried other Docker images and found that some cannot mount the volume, while others cannot install new packages. This is my own RStudio server on my computer.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/Rstudio-480.webp 480w,/assets/img/ComSetting/Rstudio-800.webp 800w,/assets/img/ComSetting/Rstudio-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/Rstudio.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> R Studio server opened on my computer </div> <p>Please note that the path that you use in the dockerized R is the path in the container, otherwise dockerized R can’t find your destination. You can easily find the path by using Terminal in the dockerized R studio. Going to the directory you want, then use <code class="language-plaintext highlighter-rouge">pwd</code> command to find the path of that directory.</p> <h2 id="trick">Trick</h2> <h3 id="1-r-version">1. R version</h3> <p>One big problem I found with R version issues is the compatibility between the R version and package version. Sometimes we need a newer version, but sometimes the old one works fine. To switch between R versions, I use this trick.</p> <p>Docker allows us to pull a specific version of a docker image, as shown in the picture (or <a href="https://hub.docker.com/r/bioconductor/bioconductor/tags">this link.</a>)</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/docker_Rversion-480.webp 480w,/assets/img/ComSetting/docker_Rversion-800.webp 800w,/assets/img/ComSetting/docker_Rversion-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/docker_Rversion.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Different version of R on Docker Hub </div> <p>The version of R will be shown in the docker file for each version. From the picture below, “R version 4.4.1” is stated on line number 7.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/dockerFile_Rversion-480.webp 480w,/assets/img/ComSetting/dockerFile_Rversion-800.webp 800w,/assets/img/ComSetting/dockerFile_Rversion-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/dockerFile_Rversion.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Docker file of R version 4.4.1 </div> <p>From this point, I pull “R version 4.4.1” from docker, mount the same volume, and initialize a Dockerized R Studio and open RStudio Server using the command line below.</p> <pre><code class="language-{bash}"> sudo docker run \
    -v /home/namthip:/home/rstudio/namthip \
    -v /home/namthip/R/host-site-library:/usr/local/lib/R/host-site-library \
    -e R_LIBS_USER=/home/namthip/R/host-site-library \
    -e PASSWORD=&lt;MY_PASSWORD&gt; \
  	-p 8787:8787 \
  	bioconductor/bioconductor_docker:RELEASE_3_19-R-4.4.1
</code></pre> <p>After launching the container, we need to access RStudio Server by opening an internet browser and typing <code class="language-plaintext highlighter-rouge">localhost:8787</code>. The login page for RStudio Server will appear. The username will always be <code class="language-plaintext highlighter-rouge">rstudio</code> and the password is the one you defined.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/R_login-480.webp 480w,/assets/img/ComSetting/R_login-800.webp 800w,/assets/img/ComSetting/R_login-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/R_login.jpeg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Log in page of R server (R version 4.4.1) </div> <h3 id="2-best-practice-for-r">2. Best practice for R</h3> <p>If you start using R, it is good to do so following this suggestion <a href="https://github.com/wurli/r-best-practice">“Best Practice for R”</a>. I started using R quite from scratch; I had to fix so many things afterward.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/BestPractice_R-480.webp 480w,/assets/img/BestPractice_R-800.webp 800w,/assets/img/BestPractice_R-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/BestPractice_R.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Cheast sheet: <a href="https://github.com/wurli/r-best-practice" target="_blank">Best Practice for R</a> </div>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><category term="ComputerWorkbench"/><category term="R"/><category term="Rserver"/><category term="Docker"/><category term="Container"/><summary type="html"><![CDATA[Introduction For this part of My Computer Workbench, I would like to explain the programming language I am using. Additionally, this section covers trick for R and how to use R with reproducibility in mind.]]></summary></entry><entry><title type="html">Tracking verions of code by Git Version Control - [Proj:My Computer Workbench]</title><link href="https://kuchikinamthip.github.io/blog/2024/Comp5_Git/" rel="alternate" type="text/html" title="Tracking verions of code by Git Version Control - [Proj:My Computer Workbench]"/><published>2024-09-26T00:00:00+00:00</published><updated>2024-09-26T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2024/Comp5_Git</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2024/Comp5_Git/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>For this part of <a href="https://kuchikinamthip.github.io/projects/ComBio">My Computer Workbench</a>, I would like to introduce you to a version control system that helps manage different versions of code.</p> <h2 id="version-control">Version control</h2> <p>Version control, also known as source control or revision control, is a system that records changes to a file or set of files, enabling users to recall specific versions later.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/Git_concept-480.webp 480w,/assets/img/ComSetting/Git_concept-800.webp 800w,/assets/img/ComSetting/Git_concept-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/Git_concept.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> <a href="https://zhiminzhan.medium.com/10-minutes-guide-to-git-version-control-for-testers-f58e059bb5e7" target="_blank">Concept of version control and repository</a> </div> <p>My software engineer friends cheer me on to use it instead of saving many versions of files, such as coding files from R.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/Git_meme-480.webp 480w,/assets/img/ComSetting/Git_meme-800.webp 800w,/assets/img/ComSetting/Git_meme-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/Git_meme.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Git version control meme </div> <h2 id="git-version-control">Git version control</h2> <p>I use Git as a version control tool. Git will create a directory called .git inside the folder of interest. This hidden folder will track the changes of all files inside the folder and sub-folder. Git will not interrupt your normal work; it just tracks quietly, and you just need to type a few commands to let Git record your coding version. Follow my steps to use Git.</p> <ol> <li>Install Git according to <a href="https://git-scm.com/downloads">the recommendation</a>.</li> <li>Go to the folder that you want to monitor the files via the command line. <pre><code class="language-{bash}">cd &lt;folder-of-interest&gt;
</code></pre> </li> <li>Initialize Git <pre><code class="language-{bash}">git init
</code></pre> <p>Now that Git has started, you can see the <code class="language-plaintext highlighter-rouge">.git</code> folder inside the folder of interest by simply listing all files using the command <code class="language-plaintext highlighter-rouge">ls -al</code>.</p> </li> <li>Add all files inside this folder to the staging area. <pre><code class="language-{bash}">git add .  #git add &lt;path-to-directory-or-file&gt; 
</code></pre> <p>You can add it many times.</p> </li> <li>Commit the change to git. <pre><code class="language-{bash}">git commit -m "&lt;you-message&gt;"
</code></pre> <p>For your routine work, just run git add and git commit (4 to 5).</p> </li> </ol> <h2 id="note-for-git">Note for Git</h2> <ol> <li>Check status of Git <br/> Now the changes were sent to git. You can check the status of each step using the following command. <pre><code class="language-{bash}">git status
</code></pre> </li> <li>Git ignore <br/> If you don’t want to track some files or folders, you can use git ignore by defining those in <code class="language-plaintext highlighter-rouge">.gitignore</code>. <pre><code class="language-{bash}"># Create `.gitignore` file using nano
nano .gitignore
</code></pre> <p>Add the file name and folder that you want to ignore to the <code class="language-plaintext highlighter-rouge">.gitignore</code></p> <pre><code class="language-{bash}"># Here I use `cat .gitignore` to show what I wrote
host-site-library/    # ignore all files under host-site-library folder
.Rproj.user
.Rhistory
.RData
.Ruserdata    # ignore all files ending with `.Rproj.user`, `.Rhistory`, `.RData`, and `.Ruserdata`. 
</code></pre> </li> <li>Git doesn’t track my folders, even though I do all things correctly.</li> </ol> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ComSetting/Git_problem1-480.webp 480w,/assets/img/ComSetting/Git_problem1-800.webp 800w,/assets/img/ComSetting/Git_problem1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/ComSetting/Git_problem1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Git can't track the folders </div> <p>I found the solution on <a href="https://stackoverflow.com/questions/4161022/how-to-track-untracked-content?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa">Stack Overflow.</a> The problem occurs because I have <code class="language-plaintext highlighter-rouge">.git</code> inside these two folders (I initized inside those folders). After removing the <code class="language-plaintext highlighter-rouge">.git</code> files inside those folders and re-running all the needed commands, it worked very well.</p> <h2 id="github-repository">GitHub Repository</h2> <p>I’m firstly confused between Git and GitHub. I would like to clarify this first. Git is the version control tool, while GitHub is a repository where we can store files using the benefits of Git commands and its version control. GitHub provides free but limited space for the repository. Therefore, I need to use <code class="language-plaintext highlighter-rouge">.gitignore</code> to help me manage what will not be sent to GitHub.</p>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><category term="ComputerWorkbench"/><category term="R"/><category term="Rserver"/><category term="Docker"/><category term="Container"/><summary type="html"><![CDATA[Introduction For this part of My Computer Workbench, I would like to introduce you to a version control system that helps manage different versions of code.]]></summary></entry><entry><title type="html">Screen command to Maintain Terminal Screen - [Unix trick]</title><link href="https://kuchikinamthip.github.io/blog/2024/CompUnix1_Screen/" rel="alternate" type="text/html" title="Screen command to Maintain Terminal Screen - [Unix trick]"/><published>2024-09-26T00:00:00+00:00</published><updated>2024-09-26T00:00:00+00:00</updated><id>https://kuchikinamthip.github.io/blog/2024/CompUnix1_Screen</id><content type="html" xml:base="https://kuchikinamthip.github.io/blog/2024/CompUnix1_Screen/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>I found that one of the problems in cloud computing and remote HPC is the disconnection of the signal. Most of the processes on cloud and HPC are heavily worked and take a long analysis time. If the connection on your local computer is poor, the screen is lost, which means what you run on the remote computer stops. To solve this issue, I have tried many ways, such as using <code class="language-plaintext highlighter-rouge">snap</code> or running a Docker container in the background. However, the most convenient way is using the command <code class="language-plaintext highlighter-rouge">screen</code>.</p> <h2 id="setting-up-screen">Setting up screen</h2> <p>First, you need to install <code class="language-plaintext highlighter-rouge">screen</code> on your remote computer (either cloud computing or remote HPC). Now the screen can work properly just by calling the <code class="language-plaintext highlighter-rouge">screen</code> command. However, I want it to be easier to work with. Tommy suggested using the screen command and <code class="language-plaintext highlighter-rouge">.screenrc</code> file in <a href="https://www.youtube.com/watch?v=7t9LdMPPY7g&amp;t=231s">his video</a>. I followed his suggestion by doing the steps below.</p> <h3 id="1-install-screen">1. Install screen</h3> <p>First, install screen if it is available on your system. For HPC, if you can’t run the command below, it means that you are not an admin. The installation requires the system administrator (root).</p> <pre><code class="language-{bash}">sudo apt install screen
</code></pre> <h3 id="2-create-a-screenrc-file-at-home">2. Create a <code class="language-plaintext highlighter-rouge">.screenrc</code> file at <code class="language-plaintext highlighter-rouge">$HOME</code></h3> <p>Then, go to your home directory and create a <code class="language-plaintext highlighter-rouge">.screenrc</code> file using <code class="language-plaintext highlighter-rouge">nano</code>.</p> <pre><code class="language-{bash}"># Go to home directory
cd ~

# Create a `.screenrc` file using nano
nano .screenrc
</code></pre> <p>Put the script below to the <code class="language-plaintext highlighter-rouge">.screenrc</code> file.</p> <pre><code class="language-{bash}"># Script for `.screenrc` file on home directory
startup_message off
vbell off
autodetach on
shell -$SHELL

bind c screen 1
bind ^c screen 1
bind 0 select 10                                                            
screen 1

term xterm-256color

hardstatus alwayslastline 
# Very nice tabbed colored hardstatus line
hardstatus string '%{= kG}[ %{G}%H | %{R}%l %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %d/%m %{W}%c %{g}]'
 
# change command character from ctrl-a to ctrl-b (emacs users may want this)
#escape ^Bb
 
# Hide hardstatus: ctrl-a f 
bind f eval "hardstatus ignore"
# Show hardstatus: ctrl-a F
bind F eval "hardstatus alwayslastline"
</code></pre> <p>You can use the <code class="language-plaintext highlighter-rouge">ls</code> and <code class="language-plaintext highlighter-rouge">cat</code> commands to check it, then re-run the <code class="language-plaintext highlighter-rouge">screen</code> command again.</p> <pre><code class="language-{bash}"># To list all objects including hided object.
ls -al

# To obserse the `.screenrc` file
cat .screenrc
</code></pre> <h3 id="3-test-the-screen-command">3. Test the <code class="language-plaintext highlighter-rouge">screen</code> command</h3> <p>To start using screen, we run this command.</p> <pre><code class="language-{bash}">screen
</code></pre> <p>This is the terminal after adding the <code class="language-plaintext highlighter-rouge">.screenrc</code> file and ran the <code class="language-plaintext highlighter-rouge">screen</code> command.</p> <center> ![](pic/screen_command.jpeg){width=50%} </center> <p>\</p> <h2 id="useful-command-and-shortcuts-for-screen">Useful command and shortcuts for screen</h2> <p>Here is the useful commands for using screen.</p> <pre><code class="language-{bash}"># list all screen
screen -ls

# resume the screen section
screen -r # if you have only one screen
screen -r &lt;screen no&gt; # if you have more than one screen, you will need to define which one you want to open
</code></pre> <p>After you open the screen as shown in the picture, these are the useful commands that I often use. <br/> <code class="language-plaintext highlighter-rouge">Ctrl+a</code> <code class="language-plaintext highlighter-rouge">c</code> : Create a new window (with shell). <br/> <code class="language-plaintext highlighter-rouge">Ctrl+a</code> <code class="language-plaintext highlighter-rouge">0</code> : Switch to window 0 (by number). <br/> <code class="language-plaintext highlighter-rouge">Ctrl+a</code> <code class="language-plaintext highlighter-rouge">X</code> : Close the current region. <br/> <code class="language-plaintext highlighter-rouge">Ctrl+a</code> <code class="language-plaintext highlighter-rouge">d</code> : Detach the screen section. <br/> <code class="language-plaintext highlighter-rouge">Ctrl+a</code> <code class="language-plaintext highlighter-rouge">k</code> : Kill the screen section. \</p> <p>Please note that after the computer is shut down, all screens will be terminated. If you are running something on the screen, such as Dockerized R Studio, don’t forget to close it properly. Otherwise, it might affect your files.</p>]]></content><author><name>Krittiyabhorn (Namthip) Kongtanawanich</name></author><category term="ComputerWorkbench"/><category term="Unix"/><category term="Linux"/><category term="UnixTrick"/><summary type="html"><![CDATA[Introduction]]></summary></entry></feed>